---
import '../styles/tabs.css';

// const activeTextColor = '#A741FF';

export interface Props {
  activeTextColor?: string;
  headings: string[];
  contents: string[];

}

const {headings, contents, activeTextColor = '#A741FF'} = Astro.props as Props;
---
<div class="tabs">
  <ul class="tabs-header">
    {headings.map(heading => (
      <li>{heading}</li>
    ))}
  </ul>
  <ul class="tabs-content">
    {contents.map(content => (
      <li class="tab">
        <code>{content}</code>
      </li>
    ))}
  </ul>
</div>

<script define:vars={{activeTextColor}}>
function createTabs(el) {
  const header = el.querySelector('.tabs-header');
  const content = el.querySelector('.tabs-content');
  const tab_headers = [...header.children];
  const tab_contents = [...content.children];
  tab_contents.forEach((x) => (x.style.display = 'none'));
  let current_tab_index = -1;

  function setTab(idx) {
    if (current_tab_index > -1) {
      tab_headers[current_tab_index].style.fontWeight = 400;
      tab_headers[current_tab_index].style.color = '#fff';
      tab_contents[current_tab_index].style.display = 'none';
    }
    tab_headers[idx].style.fontWeight = 800;
    tab_headers[idx].style.color = activeTextColor;
    tab_contents[idx].style.display = 'flex';
    current_tab_index = idx;
  }

  let default_tab_index = tab_headers.findIndex((x) => {
    return [...x.classList].indexOf('default-tab') > -1;
  });

  default_tab_index = default_tab_index === -1 ? 0 : default_tab_index;
  setTab(default_tab_index);
  tab_headers.forEach((x, i) => (x.onclick = (e) => setTab(i)));
}

// Run
[...document.querySelectorAll('.tabs')].forEach((x) => createTabs(x));
</script>